apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","ingress.kubernetes.io/ssl-redirect":"true","kubernetes.io/ingress.class":"nginx","kubernetes.io/tls-acme":"true"},"name":"docs-website","namespace":"default"},"spec":{"rules":[{"host":"help.restorize.io","http":{"paths":[{"backend":{"serviceName":"docs-website","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["help.restorize.io"],"secretName":"restorize-docs-website-tls"}]}}
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    creationTimestamp: "2020-09-08T00:05:08Z"
    generation: 3
    managedFields:
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: nginx-ingress-controller
      operation: Update
      time: "2020-09-08T00:05:41Z"
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cert-manager.io/cluster-issuer: {}
            f:ingress.kubernetes.io/ssl-redirect: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:kubernetes.io/ingress.class: {}
            f:kubernetes.io/tls-acme: {}
        f:spec:
          f:rules: {}
          f:tls: {}
      manager: kubectl.exe
      operation: Update
      time: "2020-09-08T01:26:55Z"
    name: docs-website
    namespace: default
    resourceVersion: "10354607"
    selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/docs-website
    uid: 24ad871f-9531-4843-a5fd-15b9799104d5
  spec:
    rules:
    - host: help.restorize.io
      http:
        paths:
        - backend:
            serviceName: docs-website
            servicePort: 80
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - help.restorize.io
      secretName: restorize-docs-website-tls
  status:
    loadBalancer:
      ingress:
      - ip: 138.68.36.34
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","ingress.kubernetes.io/ssl-redirect":"true","kubernetes.io/ingress.class":"nginx","kubernetes.io/tls-acme":"true"},"name":"restorize","namespace":"default"},"spec":{"rules":[{"host":"app.dev.restorize.io","http":{"paths":[{"backend":{"serviceName":"restorize","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["app.dev.restorize.io"],"secretName":"restorize-app-tls"}]}}
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    creationTimestamp: "2020-08-02T04:36:45Z"
    generation: 1
    managedFields:
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cert-manager.io/cluster-issuer: {}
            f:ingress.kubernetes.io/ssl-redirect: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:kubernetes.io/ingress.class: {}
            f:kubernetes.io/tls-acme: {}
        f:spec:
          f:rules: {}
          f:tls: {}
      manager: kubectl.exe
      operation: Update
      time: "2020-08-02T04:36:45Z"
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: nginx-ingress-controller
      operation: Update
      time: "2020-08-02T04:37:41Z"
    name: restorize
    namespace: default
    resourceVersion: "3609236"
    selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/restorize
    uid: e2db8c61-6332-478f-a719-de7aaf091f3b
  spec:
    rules:
    - host: app.dev.restorize.io
      http:
        paths:
        - backend:
            serviceName: restorize
            servicePort: 80
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - app.dev.restorize.io
      secretName: restorize-app-tls
  status:
    loadBalancer:
      ingress:
      - ip: 138.68.36.34
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod","ingress.kubernetes.io/ssl-redirect":"true","kubernetes.io/ingress.class":"nginx","kubernetes.io/tls-acme":"true"},"name":"website","namespace":"default"},"spec":{"rules":[{"host":"restorize.io","http":{"paths":[{"backend":{"serviceName":"website","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["restorize.io"],"secretName":"restorize-website-tls"}]}}
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    creationTimestamp: "2020-07-21T10:48:23Z"
    generation: 3
    managedFields:
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: nginx-ingress-controller
      operation: Update
      time: "2020-07-21T10:48:40Z"
    - apiVersion: networking.k8s.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cert-manager.io/cluster-issuer: {}
            f:ingress.kubernetes.io/ssl-redirect: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:kubernetes.io/ingress.class: {}
            f:kubernetes.io/tls-acme: {}
        f:spec:
          f:rules: {}
          f:tls: {}
      manager: kubectl.exe
      operation: Update
      time: "2020-08-02T04:56:09Z"
    name: website
    namespace: default
    resourceVersion: "3611611"
    selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/website
    uid: 2c16b2cb-f4eb-44e3-872d-6c451b9ef5d9
  spec:
    rules:
    - host: restorize.io
      http:
        paths:
        - backend:
            serviceName: website
            servicePort: 80
          path: /
          pathType: ImplementationSpecific
    tls:
    - hosts:
      - restorize.io
      secretName: restorize-website-tls
  status:
    loadBalancer:
      ingress:
      - ip: 138.68.36.34
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
